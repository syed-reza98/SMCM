version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-smcm_db}
      POSTGRES_USER: ${DB_USER:-smcm_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-smcm_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - smcm_network

  # Redis for Caching and Task Queue
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smcm_network

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-smcm_db}
      - DB_USER=${DB_USER:-smcm_user}
      - DB_PASSWORD=${DB_PASSWORD:-smcm_password}
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    depends_on:
      - db
      - redis
    networks:
      - smcm_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-smcm_db}
      - DB_USER=${DB_USER:-smcm_user}
      - DB_PASSWORD=${DB_PASSWORD:-smcm_password}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    networks:
      - smcm_network
    command: celery -A smcm worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-smcm_db}
      - DB_USER=${DB_USER:-smcm_user}
      - DB_PASSWORD=${DB_PASSWORD:-smcm_password}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    networks:
      - smcm_network
    command: celery -A smcm beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - smcm_network
    command: npm run dev

  # Nginx (Production-like setup)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - backend_static:/var/www/static
      - backend_media:/var/www/media
    depends_on:
      - backend
      - frontend
    networks:
      - smcm_network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  backend_static:
  backend_media:

networks:
  smcm_network:
    driver: bridge